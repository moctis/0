function fn.digPlusRun()
 local i=0 
 pos.ox,pos.oy,pos.oz,pos.odir=pos.x,pos.y,pos.z,pos.dir 
 turtle.select(2)
 fn.refuel(60)
 fn.digDown()
 while fn.down() and pos.y >= 6 do
  status('dig down: '..fn.where())
  for i=1,4 do 
   fn.tryDig(5)
   fn.left()
  end 
  fn.digDown()
 end
 status('return: '..fn.where())
 fn.goto(pos.ox,pos.oy-1,pos.oz,pos.odir)
 fn.lprint('fill hole')
 turtle.select(2)
 for i=1,4 do
  turtle.place()
  fn.left()
 end
 fn.up()
 turtle.placeDown()
end

function fn.digPlusLoop()
 fn.digPlusHome()
 fn.digPlusRun()
 fn.digPlusNext()
end

function fn.digPlusBase()
 local x,y,z=pos.x,pos.y,pos.z
 x=x-fn.mod(x,5)
 y=basey
 fn.goto(x,y,z,'N')
end

function fn.mod(x,d)
 return x % d
end

function fn.digPlusHome()
 local h={[0]=0,[1]=3,[2]=1,[3]=4,[4]=2}
 local x,y,z=pos.x,pos.y,pos.z
 z=fn.mod(z,5)
 x=x-fn.mod(x,5)+h[z]
 y=basey
 status(x,' ',y,' ',pos.z,' E')
 fn.goto(x,y,pos.z,'E')
end

function fn.digPlusNext()
 local x,y,z=pos.x,pos.y,pos.z
 x=x-fn.mod(x,5)+5
 y=basey
 fn.goto(x,y,z,'N')
end

function fn.digPlusDropAll()
 return fn.digPlusDrop(1)
end

function fn.digPlusDrop(start)
 local i,c,count
 if start==nil then start=2 end
 i,c = 1,0
 while true do
  status('drop remain #',i,' try ',c)
  turtle.select(i)
  count=turtle.getItemCount(i)
  if i==1 then 
    if count>remainFuel then count=remainFuel end
  elseif i==start then count=count-1 
  elseif i<start then
    count=0
  end
  
  if count>0 then
   turtle.drop(count)
   c=0
  end

  i = i+1
  if i>16 then 
    i,c = 1,c+1
    if c>10 then 
      status('digPlusDrop done')
      return 
    end
  end
 end
end
