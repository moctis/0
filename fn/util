ss=false
function status(...)  
  local cx,cy = term.getCursorPos()  
  term.setCursorPos(1,cy)
  term.clearLine()
  print(...)
  cx,cy = term.getCursorPos()
  term.setCursorPos(1,cy-1)
  ss=true
end
fn.status = status

_print=print
function print(...)
  if ss then
    local cx,cy = term.getCursorPos()  
    term.setCursorPos(1,cy)
    term.clearLine()
  end
  _print(...)
end

fn.lprint=lprint

function fn.split(data) 
  local t,i={},1
  for x in string.gmatch(data,'[^%s]+') do
    t[i],i=x,i+1
  end
  return t
end

function fn.join(t,s)  
  local msg=''
  if s==nil then s=1 end
  for i=s,#t do
    msg=msg..tostring(t[i])..' '
  end
  return msg
end

function fn.text(t)
  return textutils.serialize(t)
end
 
function fn.table(t)
  return textutils.unserialize(t)
end
 
function print_(...)
  print(fn.join({...}))
end

function fn.tobool(value,default)
  if value==nil then return default end
  return (value=='true' or value==true)
end

function fn.tonumber(value,default)
  if value==nil then return default end
  return tonumber(value)
end

function fn.pp(a,b)
 return a,b
end 