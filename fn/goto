function fn.goto(x,y,z,dir)
 x,y,z,dir=tonumber(x),tonumber(y),tonumber(z),fn.todir(dir)
 print("goto "..x.." "..y.." "..z.." "..dirs[dir])
 local i,c,tmp=0,0,false
 
 turtle.select(1)
 while pos.x~=x or pos.y~=y or pos.z~=z do
  fn.refuel(fn.distanct(x,y,z))
  fn.setDigWay(false)
  fn.move('', pos.y-y, fn.tryDown)
  fn.setDigWay(true)
  fn.move('N', pos.z-z) 
  fn.move('E', x-pos.x)
  fn.move('S', z-pos.z)
  fn.move('W', pos.x-x)
  fn.setDigWay(false)
  fn.move('', y-pos.y, fn.tryUp)
  fn.setDigWay(true)
 end
 fn.turn(dir)
end
 
function fn.distanct(x,y,z)
  return math.abs(pos.x-x)+math.abs(pos.y-y)+math.abs(pos.z-z)
end

function fn.go(x,y,z,dir)
 x=tonumber(x)+pos.x
 y=tonumber(y)+pos.y
 z=tonumber(z)+pos.z
 fn.goto(x,y,z,dir)
end

function fn.setDigWay(dropWay,digCeiling,digButtom)
 conf.dropWay=fn.tobool(dropWay,conf.dropWay)
 conf.digCeiling=fn.tobool(digCeiling,conf.digCeiling)
 conf.digButtom=fn.tobool(digButtom,conf.digButtom)
end

function fn.digWay()
 if conf.digCeiling and turtle.detectUp() then  fn.tryDigUp() end
 if conf.digButtom and turtle.detectDown() then fn.tryDigDown() end
 if conf.dropWay and not turtle.detectDown() then 
  fn.selectAdv(conf.placeSlot,1)
  turtle.placeDown()
  turtle.select(1)
 end  
end

function fn.move(dir, count, act)
 local i,c=0,0
 count=fn.tonumber(count,1)
 if act==nil then act=fn.tryForward end
 fn.turn(dir)
 while count>0 do
   if act(5) then 
	fn.digWay()
	count=count-1
   else
     break
   end   
 end
end