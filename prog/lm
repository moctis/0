
local tArgs = { ... }
local length=5
local width=3
if #tArgs==0 then
 
elseif #tArgs == 2 then
	length=tonumber(tArgs[1])
	width=tonumber(tArgs[2])
else
	print( "Usage: lm <length> <width>" )
	return
end


	
depth = 0
unloaded = 0
collected = 0

xPos,zPos = 0,0
xDir,zDir = 0,1
 
if not refuel() then
	print( "Out of Fuel" )
	return
end

print( "Excavating..." )

local reseal = false
turtle.select(1)
if turtle.digDown() then
	reseal = true
end

local alternate = 0
local done = false

while not done do
	for n=1,width do
		for m=1,length-1 do
			if not tryForwards() then
				done = true
				break
			end
			tryDigUp()
			turtle.digDown()
		end
		if done then
			break
		end
		if n<width then
			if math.fmod(n + alternate,2) == 0 then
				turnLeft()
				if not tryForwards() then
					done = true
					break
				end
			        tryDigUp()
			        turtle.digDown()
				turnLeft()
			else
				turnRight()
				if not tryForwards() then
					done = true
					break
				end
				tryDigUp()
			        turtle.digDown()
				turnRight()
			        
			end
		end
	end
	if done then
		break
	end

	local temp=width
	width=length
	length=temp	

	if width > 1 then
		if math.fmod(length,2) == 0 then
			turnRight()
		else
			if alternate == 0 then
				turnLeft()
			else
				turnRight()
			end
			alternate = 1 - alternate
		end

	end
	
        for i=1,3 do
	  if not tryDown() then
	 	done = true
	 	break
	 end
	end
	if done then
		break
	end
        turtle.digDown()
end

print( "Returning to surface..." )

-- Return to where we started
goTo( 0,0,0,0,-1 )
unload()
goTo( 0,0,0,0,1 )

-- Seal the hole
if reseal then
	turtle.placeDown()
end

print( "Mined "..(collected + unloaded).." items total." )
